package openapi2

// This file was automatically generated by gentypes.go
// DO NOT EDIT MANUALLY. All changes will be lost

import (
	"sync"
)

// PathsMutator is used to build an instance of Paths. The user must
// call `Apply()` after providing all the necessary information to
// the new instance of Paths with new values
type PathsMutator struct {
	lock   sync.Locker
	proxy  *paths
	target *paths
}

// Apply finalizes the matuation process for Paths and returns the result
func (m *PathsMutator) Apply() error {
	m.lock.Lock()
	defer m.lock.Unlock()
	*m.target = *m.proxy
	return nil
}

// MutatePaths creates a new mutator object for Paths
// Operations on the mutator are safe to be used concurrently, except for
// when calling `Apply()`, where the user is responsible for restricting access
// to the target object to be mutated
func MutatePaths(v Paths, options ...Option) *PathsMutator {
	var lock sync.Locker = &sync.Mutex{}
	for _, option := range options {
		switch option.Name() {
		case optkeyLocker:
			lock = option.Value().(sync.Locker)
		}
	}
	if lock == nil {
		lock = nilLock{}
	}
	return &PathsMutator{
		lock:   lock,
		target: v.(*paths),
		proxy:  v.Clone().(*paths),
	}
}

// Extension sets an arbitrary extension field in Paths
func (m *PathsMutator) Extension(name string, value interface{}) *PathsMutator {
	if m.proxy.extensions == nil {
		m.proxy.extensions = Extensions{}
	}
	m.proxy.extensions[name] = value
	return m
}
